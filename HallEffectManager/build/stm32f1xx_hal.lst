ARM GAS  /tmp/ccaUUeRl.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c"
  18              		.section	.text.HAL_MspInit,"ax",%progbits
  19              		.align	1
  20              		.weak	HAL_MspInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_MspInit:
  26              	.LFB67:
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @attention
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Copyright (c) 2016 STMicroelectronics.
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * All rights reserved.
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * in the root directory of this software component.
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @verbatim
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                      ##### How to use this driver #####
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The HAL contains two APIs' categories:
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Common HAL APIs
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Services HAL APIs
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @endverbatim
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
ARM GAS  /tmp/ccaUUeRl.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x0AU) /*!< [15:8]  sub2 version */
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __IO uint32_t uwTick;
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
ARM GAS  /tmp/ccaUUeRl.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           and the backup domain when enabled.
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           Tick interrupt priority.
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              handled in milliseconds basis.
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             ISR process will be blocked.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         to have correct HAL operation.
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
ARM GAS  /tmp/ccaUUeRl.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC)
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Init the low level hardware */
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspInit();
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the systick.
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        of time base.
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is optional.
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspDeInit();
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Initialize the MSP.
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  27              		.loc 1 201 1 view -0
  28              		.cfi_startproc
ARM GAS  /tmp/ccaUUeRl.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
  32              		.loc 1 205 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE67:
  37              		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	1
  39              		.weak	HAL_MspDeInit
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  44              	HAL_MspDeInit:
  45              	.LFB68:
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  46              		.loc 1 212 1 view -0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
  51              		.loc 1 216 1 view .LVU3
  52 0000 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE68:
  56              		.section	.text.HAL_DeInit,"ax",%progbits
  57              		.align	1
  58              		.global	HAL_DeInit
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  63              	HAL_DeInit:
  64              	.LFB66:
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  65              		.loc 1 176 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 10B5     		push	{r4, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
ARM GAS  /tmp/ccaUUeRl.s 			page 6


 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  74              		.loc 1 178 3 view .LVU5
  75 0002 064B     		ldr	r3, .L5
  76 0004 4FF0FF32 		mov	r2, #-1
  77 0008 1A61     		str	r2, [r3, #16]
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  78              		.loc 1 179 3 view .LVU6
  79 000a 0024     		movs	r4, #0
  80 000c 1C61     		str	r4, [r3, #16]
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  81              		.loc 1 181 3 view .LVU7
  82 000e DA60     		str	r2, [r3, #12]
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  83              		.loc 1 182 3 view .LVU8
  84 0010 DC60     		str	r4, [r3, #12]
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85              		.loc 1 190 3 view .LVU9
  86 0012 FFF7FEFF 		bl	HAL_MspDeInit
  87              	.LVL0:
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
  88              		.loc 1 193 3 view .LVU10
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  89              		.loc 1 194 1 is_stmt 0 view .LVU11
  90 0016 2046     		mov	r0, r4
  91 0018 10BD     		pop	{r4, pc}
  92              	.L6:
  93 001a 00BF     		.align	2
  94              	.L5:
  95 001c 00100240 		.word	1073876992
  96              		.cfi_endproc
  97              	.LFE66:
  99              		.section	.text.HAL_InitTick,"ax",%progbits
 100              		.align	1
 101              		.weak	HAL_InitTick
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	HAL_InitTick:
 107              	.LVL1:
 108              	.LFB69:
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function configures the source of the time base.
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        Tick interrupt priority.
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementation  in user file.
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/ccaUUeRl.s 			page 7


 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 109              		.loc 1 235 1 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		.loc 1 235 1 is_stmt 0 view .LVU13
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 119 0002 0446     		mov	r4, r0
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 120              		.loc 1 237 3 is_stmt 1 view .LVU14
 121              		.loc 1 237 51 is_stmt 0 view .LVU15
 122 0004 0E4B     		ldr	r3, .L13
 123 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 124 0008 4FF47A73 		mov	r3, #1000
 125 000c B3FBF2F3 		udiv	r3, r3, r2
 126              		.loc 1 237 7 view .LVU16
 127 0010 0C4A     		ldr	r2, .L13+4
 128 0012 1068     		ldr	r0, [r2]
 129              	.LVL2:
 130              		.loc 1 237 7 view .LVU17
 131 0014 B0FBF3F0 		udiv	r0, r0, r3
 132 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 133              	.LVL3:
 134              		.loc 1 237 6 discriminator 1 view .LVU18
 135 001c 68B9     		cbnz	r0, .L9
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick IRQ priority */
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 136              		.loc 1 243 3 is_stmt 1 view .LVU19
 137              		.loc 1 243 6 is_stmt 0 view .LVU20
 138 001e 0F2C     		cmp	r4, #15
 139 0020 01D9     		bls	.L12
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickPrio = TickPriority;
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   else
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 140              		.loc 1 250 12 view .LVU21
 141 0022 0120     		movs	r0, #1
 142 0024 0AE0     		b	.L8
 143              	.L12:
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickPrio = TickPriority;
 144              		.loc 1 245 5 is_stmt 1 view .LVU22
 145 0026 0022     		movs	r2, #0
 146 0028 2146     		mov	r1, r4
 147 002a 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccaUUeRl.s 			page 8


 148 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 149              	.LVL4:
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 150              		.loc 1 246 5 view .LVU23
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 151              		.loc 1 246 16 is_stmt 0 view .LVU24
 152 0032 054B     		ldr	r3, .L13+8
 153 0034 1C60     		str	r4, [r3]
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 154              		.loc 1 254 3 is_stmt 1 view .LVU25
 155              		.loc 1 254 10 is_stmt 0 view .LVU26
 156 0036 0020     		movs	r0, #0
 157 0038 00E0     		b	.L8
 158              	.L9:
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 159              		.loc 1 239 12 view .LVU27
 160 003a 0120     		movs	r0, #1
 161              	.L8:
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 162              		.loc 1 255 1 view .LVU28
 163 003c 10BD     		pop	{r4, pc}
 164              	.LVL5:
 165              	.L14:
 166              		.loc 1 255 1 view .LVU29
 167 003e 00BF     		.align	2
 168              	.L13:
 169 0040 00000000 		.word	uwTickFreq
 170 0044 00000000 		.word	SystemCoreClock
 171 0048 00000000 		.word	uwTickPrio
 172              		.cfi_endproc
 173              	.LFE69:
 175              		.section	.text.HAL_Init,"ax",%progbits
 176              		.align	1
 177              		.global	HAL_Init
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 182              	HAL_Init:
 183              	.LFB65:
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 184              		.loc 1 143 1 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 08B5     		push	{r3, lr}
 189              	.LCFI2:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 193              		.loc 1 157 3 view .LVU31
 194 0002 0320     		movs	r0, #3
 195 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 196              	.LVL6:
ARM GAS  /tmp/ccaUUeRl.s 			page 9


 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 197              		.loc 1 160 3 view .LVU32
 198 0008 0F20     		movs	r0, #15
 199 000a FFF7FEFF 		bl	HAL_InitTick
 200              	.LVL7:
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 201              		.loc 1 163 3 view .LVU33
 202 000e FFF7FEFF 		bl	HAL_MspInit
 203              	.LVL8:
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 204              		.loc 1 166 3 view .LVU34
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 205              		.loc 1 167 1 is_stmt 0 view .LVU35
 206 0012 0020     		movs	r0, #0
 207 0014 08BD     		pop	{r3, pc}
 208              		.cfi_endproc
 209              	.LFE65:
 211              		.section	.text.HAL_IncTick,"ax",%progbits
 212              		.align	1
 213              		.weak	HAL_IncTick
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	HAL_IncTick:
 219              	.LFB70:
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *  @brief    HAL Control functions
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device identifier
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device revision identifier
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        used as application time base.
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
ARM GAS  /tmp/ccaUUeRl.s 			page 10


 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       in SysTick ISR.
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      implementations in user file.
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 220              		.loc 1 294 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uwTick += uwTickFreq;
 225              		.loc 1 295 3 view .LVU37
 226              		.loc 1 295 10 is_stmt 0 view .LVU38
 227 0000 034A     		ldr	r2, .L18
 228 0002 1168     		ldr	r1, [r2]
 229 0004 034B     		ldr	r3, .L18+4
 230 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 231 0008 0B44     		add	r3, r3, r1
 232 000a 1360     		str	r3, [r2]
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 233              		.loc 1 296 1 view .LVU39
 234 000c 7047     		bx	lr
 235              	.L19:
 236 000e 00BF     		.align	2
 237              	.L18:
 238 0010 00000000 		.word	uwTick
 239 0014 00000000 		.word	uwTickFreq
 240              		.cfi_endproc
 241              	.LFE70:
 243              		.section	.text.HAL_GetTick,"ax",%progbits
 244              		.align	1
 245              		.weak	HAL_GetTick
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	HAL_GetTick:
 251              	.LFB71:
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note  This function is declared as __weak to be overwritten in case of other
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick value
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 252              		.loc 1 305 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTick;
 257              		.loc 1 306 3 view .LVU41
 258              		.loc 1 306 10 is_stmt 0 view .LVU42
 259 0000 014B     		ldr	r3, .L21
ARM GAS  /tmp/ccaUUeRl.s 			page 11


 260 0002 1868     		ldr	r0, [r3]
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 261              		.loc 1 307 1 view .LVU43
 262 0004 7047     		bx	lr
 263              	.L22:
 264 0006 00BF     		.align	2
 265              	.L21:
 266 0008 00000000 		.word	uwTick
 267              		.cfi_endproc
 268              	.LFE71:
 270              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 271              		.align	1
 272              		.global	HAL_GetTickPrio
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 277              	HAL_GetTickPrio:
 278              	.LFB72:
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function returns a tick priority.
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick priority
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 279              		.loc 1 314 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickPrio;
 284              		.loc 1 315 3 view .LVU45
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 285              		.loc 1 316 1 is_stmt 0 view .LVU46
 286 0000 014B     		ldr	r3, .L24
 287 0002 1868     		ldr	r0, [r3]
 288 0004 7047     		bx	lr
 289              	.L25:
 290 0006 00BF     		.align	2
 291              	.L24:
 292 0008 00000000 		.word	uwTickPrio
 293              		.cfi_endproc
 294              	.LFE72:
 296              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 297              		.align	1
 298              		.global	HAL_SetTickFreq
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 303              	HAL_SetTickFreq:
 304              	.LVL9:
 305              	.LFB73:
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Set new tick Freq.
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval status
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/ccaUUeRl.s 			page 12


 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 306              		.loc 1 323 1 is_stmt 1 view -0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		.loc 1 323 1 is_stmt 0 view .LVU48
 311 0000 10B5     		push	{r4, lr}
 312              	.LCFI3:
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 4, -8
 315              		.cfi_offset 14, -4
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 316              		.loc 1 324 3 is_stmt 1 view .LVU49
 317              	.LVL10:
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 318              		.loc 1 325 3 view .LVU50
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 319              		.loc 1 327 3 view .LVU51
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (uwTickFreq != Freq)
 320              		.loc 1 329 3 view .LVU52
 321              		.loc 1 329 18 is_stmt 0 view .LVU53
 322 0002 084B     		ldr	r3, .L31
 323 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 324              		.loc 1 329 6 view .LVU54
 325 0006 8442     		cmp	r4, r0
 326 0008 01D1     		bne	.L30
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 327              		.loc 1 324 21 view .LVU55
 328 000a 0020     		movs	r0, #0
 329              	.LVL11:
 330              	.L27:
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     /* Back up uwTickFreq frequency */
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     prevTickFreq = uwTickFreq;
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickFreq = Freq;
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     /* Apply the new tick Freq  */
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     if (status != HAL_OK)
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     {
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       /* Restore previous tick frequency */
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       uwTickFreq = prevTickFreq;
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     }
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return status;
 331              		.loc 1 347 3 is_stmt 1 view .LVU56
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 332              		.loc 1 348 1 is_stmt 0 view .LVU57
 333 000c 10BD     		pop	{r4, pc}
 334              	.LVL12:
ARM GAS  /tmp/ccaUUeRl.s 			page 13


 335              	.L30:
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 336              		.loc 1 332 5 is_stmt 1 view .LVU58
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 337              		.loc 1 335 5 view .LVU59
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 338              		.loc 1 335 16 is_stmt 0 view .LVU60
 339 000e 1870     		strb	r0, [r3]
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 340              		.loc 1 338 5 is_stmt 1 view .LVU61
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 341              		.loc 1 338 14 is_stmt 0 view .LVU62
 342 0010 054B     		ldr	r3, .L31+4
 343 0012 1868     		ldr	r0, [r3]
 344              	.LVL13:
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 345              		.loc 1 338 14 view .LVU63
 346 0014 FFF7FEFF 		bl	HAL_InitTick
 347              	.LVL14:
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     {
 348              		.loc 1 340 5 is_stmt 1 view .LVU64
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     {
 349              		.loc 1 340 8 is_stmt 0 view .LVU65
 350 0018 0028     		cmp	r0, #0
 351 001a F7D0     		beq	.L27
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     }
 352              		.loc 1 343 7 is_stmt 1 view .LVU66
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     }
 353              		.loc 1 343 18 is_stmt 0 view .LVU67
 354 001c 014B     		ldr	r3, .L31
 355 001e 1C70     		strb	r4, [r3]
 356 0020 F4E7     		b	.L27
 357              	.L32:
 358 0022 00BF     		.align	2
 359              	.L31:
 360 0024 00000000 		.word	uwTickFreq
 361 0028 00000000 		.word	uwTickPrio
 362              		.cfi_endproc
 363              	.LFE73:
 365              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 366              		.align	1
 367              		.global	HAL_GetTickFreq
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 372              	HAL_GetTickFreq:
 373              	.LFB74:
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return tick frequency.
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Tick frequency.
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         Value of @ref HAL_TickFreqTypeDef.
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 374              		.loc 1 356 1 is_stmt 1 view -0
 375              		.cfi_startproc
ARM GAS  /tmp/ccaUUeRl.s 			page 14


 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickFreq;
 379              		.loc 1 357 3 view .LVU69
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 380              		.loc 1 358 1 is_stmt 0 view .LVU70
 381 0000 014B     		ldr	r3, .L34
 382 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 383 0004 7047     		bx	lr
 384              	.L35:
 385 0006 00BF     		.align	2
 386              	.L34:
 387 0008 00000000 		.word	uwTickFreq
 388              		.cfi_endproc
 389              	.LFE74:
 391              		.section	.text.HAL_Delay,"ax",%progbits
 392              		.align	1
 393              		.weak	HAL_Delay
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 398              	HAL_Delay:
 399              	.LVL15:
 400              	.LFB75:
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        on variable incremented.
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is incremented.
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 401              		.loc 1 372 1 is_stmt 1 view -0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		.loc 1 372 1 is_stmt 0 view .LVU72
 406 0000 38B5     		push	{r3, r4, r5, lr}
 407              	.LCFI4:
 408              		.cfi_def_cfa_offset 16
 409              		.cfi_offset 3, -16
 410              		.cfi_offset 4, -12
 411              		.cfi_offset 5, -8
 412              		.cfi_offset 14, -4
 413 0002 0446     		mov	r4, r0
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 414              		.loc 1 373 3 is_stmt 1 view .LVU73
 415              		.loc 1 373 24 is_stmt 0 view .LVU74
 416 0004 FFF7FEFF 		bl	HAL_GetTick
 417              	.LVL16:
ARM GAS  /tmp/ccaUUeRl.s 			page 15


 418              		.loc 1 373 24 view .LVU75
 419 0008 0546     		mov	r5, r0
 420              	.LVL17:
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t wait = Delay;
 421              		.loc 1 374 3 is_stmt 1 view .LVU76
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 422              		.loc 1 377 3 view .LVU77
 423              		.loc 1 377 6 is_stmt 0 view .LVU78
 424 000a B4F1FF3F 		cmp	r4, #-1
 425 000e 02D0     		beq	.L38
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 426              		.loc 1 379 5 is_stmt 1 view .LVU79
 427              		.loc 1 379 13 is_stmt 0 view .LVU80
 428 0010 044B     		ldr	r3, .L40
 429 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 430              		.loc 1 379 10 view .LVU81
 431 0014 1C44     		add	r4, r4, r3
 432              	.LVL18:
 433              	.L38:
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 434              		.loc 1 384 3 is_stmt 1 view .LVU82
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 435              		.loc 1 382 38 discriminator 1 view .LVU83
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 436              		.loc 1 382 11 is_stmt 0 discriminator 1 view .LVU84
 437 0016 FFF7FEFF 		bl	HAL_GetTick
 438              	.LVL19:
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 439              		.loc 1 382 25 discriminator 1 view .LVU85
 440 001a 401B     		subs	r0, r0, r5
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 441              		.loc 1 382 38 discriminator 1 view .LVU86
 442 001c A042     		cmp	r0, r4
 443 001e FAD3     		bcc	.L38
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 444              		.loc 1 385 1 view .LVU87
 445 0020 38BD     		pop	{r3, r4, r5, pc}
 446              	.LVL20:
 447              	.L41:
 448              		.loc 1 385 1 view .LVU88
 449 0022 00BF     		.align	2
 450              	.L40:
 451 0024 00000000 		.word	uwTickFreq
 452              		.cfi_endproc
 453              	.LFE75:
 455              		.section	.text.HAL_SuspendTick,"ax",%progbits
 456              		.align	1
 457              		.weak	HAL_SuspendTick
 458              		.syntax unified
 459              		.thumb
ARM GAS  /tmp/ccaUUeRl.s 			page 16


 460              		.thumb_func
 462              	HAL_SuspendTick:
 463              	.LFB76:
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is suspended.
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 464              		.loc 1 398 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 469              		.loc 1 400 3 view .LVU90
 470 0000 4FF0E022 		mov	r2, #-536813568
 471 0004 1369     		ldr	r3, [r2, #16]
 472 0006 23F00203 		bic	r3, r3, #2
 473 000a 1361     		str	r3, [r2, #16]
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 474              		.loc 1 401 1 is_stmt 0 view .LVU91
 475 000c 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE76:
 479              		.section	.text.HAL_ResumeTick,"ax",%progbits
 480              		.align	1
 481              		.weak	HAL_ResumeTick
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 486              	HAL_ResumeTick:
 487              	.LFB77:
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is resumed.
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 488              		.loc 1 414 1 is_stmt 1 view -0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccaUUeRl.s 			page 17


 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 493              		.loc 1 416 3 view .LVU93
 494 0000 4FF0E022 		mov	r2, #-536813568
 495 0004 1369     		ldr	r3, [r2, #16]
 496 0006 43F00203 		orr	r3, r3, #2
 497 000a 1361     		str	r3, [r2, #16]
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 498              		.loc 1 417 1 is_stmt 0 view .LVU94
 499 000c 7047     		bx	lr
 500              		.cfi_endproc
 501              	.LFE77:
 503              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 504              		.align	1
 505              		.global	HAL_GetHalVersion
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 510              	HAL_GetHalVersion:
 511              	.LFB78:
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 512              		.loc 1 424 1 is_stmt 1 view -0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return __STM32F1xx_HAL_VERSION;
 517              		.loc 1 425 3 view .LVU96
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 518              		.loc 1 426 1 is_stmt 0 view .LVU97
 519 0000 0048     		ldr	r0, .L45
 520 0002 7047     		bx	lr
 521              	.L46:
 522              		.align	2
 523              	.L45:
 524 0004 000A0101 		.word	16845312
 525              		.cfi_endproc
 526              	.LFE78:
 528              		.section	.text.HAL_GetREVID,"ax",%progbits
 529              		.align	1
 530              		.global	HAL_GetREVID
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 535              	HAL_GetREVID:
 536              	.LFB79:
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
ARM GAS  /tmp/ccaUUeRl.s 			page 18


 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device revision identifier
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 537              		.loc 1 440 1 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 542              		.loc 1 441 3 view .LVU99
 543              		.loc 1 441 18 is_stmt 0 view .LVU100
 544 0000 014B     		ldr	r3, .L48
 545 0002 1868     		ldr	r0, [r3]
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 546              		.loc 1 442 1 view .LVU101
 547 0004 000C     		lsrs	r0, r0, #16
 548 0006 7047     		bx	lr
 549              	.L49:
 550              		.align	2
 551              	.L48:
 552 0008 002004E0 		.word	-536600576
 553              		.cfi_endproc
 554              	.LFE79:
 556              		.section	.text.HAL_GetDEVID,"ax",%progbits
 557              		.align	1
 558              		.global	HAL_GetDEVID
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 563              	HAL_GetDEVID:
 564              	.LFB80:
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 565              		.loc 1 456 1 is_stmt 1 view -0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccaUUeRl.s 			page 19


 569              		@ link register save eliminated.
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 570              		.loc 1 457 3 view .LVU103
 571              		.loc 1 457 18 is_stmt 0 view .LVU104
 572 0000 024B     		ldr	r3, .L51
 573 0002 1868     		ldr	r0, [r3]
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 574              		.loc 1 458 1 view .LVU105
 575 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 576 0008 7047     		bx	lr
 577              	.L52:
 578 000a 00BF     		.align	2
 579              	.L51:
 580 000c 002004E0 		.word	-536600576
 581              		.cfi_endproc
 582              	.LFE80:
 584              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 585              		.align	1
 586              		.global	HAL_GetUIDw0
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 591              	HAL_GetUIDw0:
 592              	.LFB81:
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 593              		.loc 1 465 1 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 598              		.loc 1 466 4 view .LVU107
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 599              		.loc 1 467 1 is_stmt 0 view .LVU108
 600 0000 014B     		ldr	r3, .L54
 601 0002 D3F8E807 		ldr	r0, [r3, #2024]
 602 0006 7047     		bx	lr
 603              	.L55:
 604              		.align	2
 605              	.L54:
 606 0008 00F0FF1F 		.word	536866816
 607              		.cfi_endproc
 608              	.LFE81:
 610              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 611              		.align	1
 612              		.global	HAL_GetUIDw1
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 617              	HAL_GetUIDw1:
 618              	.LFB82:
ARM GAS  /tmp/ccaUUeRl.s 			page 20


 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 619              		.loc 1 474 1 is_stmt 1 view -0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 624              		.loc 1 475 4 view .LVU110
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 625              		.loc 1 476 1 is_stmt 0 view .LVU111
 626 0000 014B     		ldr	r3, .L57
 627 0002 D3F8EC07 		ldr	r0, [r3, #2028]
 628 0006 7047     		bx	lr
 629              	.L58:
 630              		.align	2
 631              	.L57:
 632 0008 00F0FF1F 		.word	536866816
 633              		.cfi_endproc
 634              	.LFE82:
 636              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 637              		.align	1
 638              		.global	HAL_GetUIDw2
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 643              	HAL_GetUIDw2:
 644              	.LFB83:
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 645              		.loc 1 483 1 is_stmt 1 view -0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 650              		.loc 1 484 4 view .LVU113
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 651              		.loc 1 485 1 is_stmt 0 view .LVU114
 652 0000 014B     		ldr	r3, .L60
 653 0002 D3F8F007 		ldr	r0, [r3, #2032]
 654 0006 7047     		bx	lr
 655              	.L61:
 656              		.align	2
 657              	.L60:
 658 0008 00F0FF1F 		.word	536866816
 659              		.cfi_endproc
ARM GAS  /tmp/ccaUUeRl.s 			page 21


 660              	.LFE83:
 662              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 663              		.align	1
 664              		.global	HAL_DBGMCU_EnableDBGSleepMode
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 669              	HAL_DBGMCU_EnableDBGSleepMode:
 670              	.LFB84:
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 671              		.loc 1 492 1 is_stmt 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675              		@ link register save eliminated.
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 676              		.loc 1 493 3 view .LVU116
 677 0000 024A     		ldr	r2, .L63
 678 0002 5368     		ldr	r3, [r2, #4]
 679 0004 43F00103 		orr	r3, r3, #1
 680 0008 5360     		str	r3, [r2, #4]
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 681              		.loc 1 494 1 is_stmt 0 view .LVU117
 682 000a 7047     		bx	lr
 683              	.L64:
 684              		.align	2
 685              	.L63:
 686 000c 002004E0 		.word	-536600576
 687              		.cfi_endproc
 688              	.LFE84:
 690              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 691              		.align	1
 692              		.global	HAL_DBGMCU_DisableDBGSleepMode
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 697              	HAL_DBGMCU_DisableDBGSleepMode:
 698              	.LFB85:
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
ARM GAS  /tmp/ccaUUeRl.s 			page 22


 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 699              		.loc 1 508 1 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 704              		.loc 1 509 3 view .LVU119
 705 0000 024A     		ldr	r2, .L66
 706 0002 5368     		ldr	r3, [r2, #4]
 707 0004 23F00103 		bic	r3, r3, #1
 708 0008 5360     		str	r3, [r2, #4]
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 709              		.loc 1 510 1 is_stmt 0 view .LVU120
 710 000a 7047     		bx	lr
 711              	.L67:
 712              		.align	2
 713              	.L66:
 714 000c 002004E0 		.word	-536600576
 715              		.cfi_endproc
 716              	.LFE85:
 718              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 719              		.align	1
 720              		.global	HAL_DBGMCU_EnableDBGStopMode
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	HAL_DBGMCU_EnableDBGStopMode:
 726              	.LFB86:
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
ARM GAS  /tmp/ccaUUeRl.s 			page 23


 727              		.loc 1 538 1 is_stmt 1 view -0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 732              		.loc 1 539 3 view .LVU122
 733 0000 024A     		ldr	r2, .L69
 734 0002 5368     		ldr	r3, [r2, #4]
 735 0004 43F00203 		orr	r3, r3, #2
 736 0008 5360     		str	r3, [r2, #4]
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 737              		.loc 1 540 1 is_stmt 0 view .LVU123
 738 000a 7047     		bx	lr
 739              	.L70:
 740              		.align	2
 741              	.L69:
 742 000c 002004E0 		.word	-536600576
 743              		.cfi_endproc
 744              	.LFE86:
 746              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 747              		.align	1
 748              		.global	HAL_DBGMCU_DisableDBGStopMode
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 753              	HAL_DBGMCU_DisableDBGStopMode:
 754              	.LFB87:
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 755              		.loc 1 554 1 is_stmt 1 view -0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 0
 758              		@ frame_needed = 0, uses_anonymous_args = 0
 759              		@ link register save eliminated.
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 760              		.loc 1 555 3 view .LVU125
 761 0000 024A     		ldr	r2, .L72
 762 0002 5368     		ldr	r3, [r2, #4]
 763 0004 23F00203 		bic	r3, r3, #2
 764 0008 5360     		str	r3, [r2, #4]
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 765              		.loc 1 556 1 is_stmt 0 view .LVU126
 766 000a 7047     		bx	lr
 767              	.L73:
ARM GAS  /tmp/ccaUUeRl.s 			page 24


 768              		.align	2
 769              	.L72:
 770 000c 002004E0 		.word	-536600576
 771              		.cfi_endproc
 772              	.LFE87:
 774              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 775              		.align	1
 776              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 781              	HAL_DBGMCU_EnableDBGStandbyMode:
 782              	.LFB88:
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 783              		.loc 1 570 1 is_stmt 1 view -0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              		@ link register save eliminated.
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 788              		.loc 1 571 3 view .LVU128
 789 0000 024A     		ldr	r2, .L75
 790 0002 5368     		ldr	r3, [r2, #4]
 791 0004 43F00403 		orr	r3, r3, #4
 792 0008 5360     		str	r3, [r2, #4]
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 793              		.loc 1 572 1 is_stmt 0 view .LVU129
 794 000a 7047     		bx	lr
 795              	.L76:
 796              		.align	2
 797              	.L75:
 798 000c 002004E0 		.word	-536600576
 799              		.cfi_endproc
 800              	.LFE88:
 802              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 803              		.align	1
 804              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 809              	HAL_DBGMCU_DisableDBGStandbyMode:
 810              	.LFB89:
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
ARM GAS  /tmp/ccaUUeRl.s 			page 25


 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 811              		.loc 1 586 1 is_stmt 1 view -0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 816              		.loc 1 587 3 view .LVU131
 817 0000 024A     		ldr	r2, .L78
 818 0002 5368     		ldr	r3, [r2, #4]
 819 0004 23F00403 		bic	r3, r3, #4
 820 0008 5360     		str	r3, [r2, #4]
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 821              		.loc 1 588 1 is_stmt 0 view .LVU132
 822 000a 7047     		bx	lr
 823              	.L79:
 824              		.align	2
 825              	.L78:
 826 000c 002004E0 		.word	-536600576
 827              		.cfi_endproc
 828              	.LFE89:
 830              		.global	uwTickFreq
 831              		.section	.data.uwTickFreq,"aw"
 834              	uwTickFreq:
 835 0000 01       		.byte	1
 836              		.global	uwTickPrio
 837              		.section	.data.uwTickPrio,"aw"
 838              		.align	2
 841              	uwTickPrio:
 842 0000 10000000 		.word	16
 843              		.global	uwTick
 844              		.section	.bss.uwTick,"aw",%nobits
 845              		.align	2
 848              	uwTick:
 849 0000 00000000 		.space	4
 850              		.text
 851              	.Letext0:
 852              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 853              		.file 3 "/opt/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 854              		.file 4 "/opt/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 855              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 856              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 857              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 858              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 859              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccaUUeRl.s 			page 26


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal.c
     /tmp/ccaUUeRl.s:19     .text.HAL_MspInit:00000000 $t
     /tmp/ccaUUeRl.s:25     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccaUUeRl.s:38     .text.HAL_MspDeInit:00000000 $t
     /tmp/ccaUUeRl.s:44     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
     /tmp/ccaUUeRl.s:57     .text.HAL_DeInit:00000000 $t
     /tmp/ccaUUeRl.s:63     .text.HAL_DeInit:00000000 HAL_DeInit
     /tmp/ccaUUeRl.s:95     .text.HAL_DeInit:0000001c $d
     /tmp/ccaUUeRl.s:100    .text.HAL_InitTick:00000000 $t
     /tmp/ccaUUeRl.s:106    .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccaUUeRl.s:169    .text.HAL_InitTick:00000040 $d
     /tmp/ccaUUeRl.s:834    .data.uwTickFreq:00000000 uwTickFreq
     /tmp/ccaUUeRl.s:841    .data.uwTickPrio:00000000 uwTickPrio
     /tmp/ccaUUeRl.s:176    .text.HAL_Init:00000000 $t
     /tmp/ccaUUeRl.s:182    .text.HAL_Init:00000000 HAL_Init
     /tmp/ccaUUeRl.s:212    .text.HAL_IncTick:00000000 $t
     /tmp/ccaUUeRl.s:218    .text.HAL_IncTick:00000000 HAL_IncTick
     /tmp/ccaUUeRl.s:238    .text.HAL_IncTick:00000010 $d
     /tmp/ccaUUeRl.s:848    .bss.uwTick:00000000 uwTick
     /tmp/ccaUUeRl.s:244    .text.HAL_GetTick:00000000 $t
     /tmp/ccaUUeRl.s:250    .text.HAL_GetTick:00000000 HAL_GetTick
     /tmp/ccaUUeRl.s:266    .text.HAL_GetTick:00000008 $d
     /tmp/ccaUUeRl.s:271    .text.HAL_GetTickPrio:00000000 $t
     /tmp/ccaUUeRl.s:277    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
     /tmp/ccaUUeRl.s:292    .text.HAL_GetTickPrio:00000008 $d
     /tmp/ccaUUeRl.s:297    .text.HAL_SetTickFreq:00000000 $t
     /tmp/ccaUUeRl.s:303    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
     /tmp/ccaUUeRl.s:360    .text.HAL_SetTickFreq:00000024 $d
     /tmp/ccaUUeRl.s:366    .text.HAL_GetTickFreq:00000000 $t
     /tmp/ccaUUeRl.s:372    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
     /tmp/ccaUUeRl.s:387    .text.HAL_GetTickFreq:00000008 $d
     /tmp/ccaUUeRl.s:392    .text.HAL_Delay:00000000 $t
     /tmp/ccaUUeRl.s:398    .text.HAL_Delay:00000000 HAL_Delay
     /tmp/ccaUUeRl.s:451    .text.HAL_Delay:00000024 $d
     /tmp/ccaUUeRl.s:456    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccaUUeRl.s:462    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccaUUeRl.s:480    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccaUUeRl.s:486    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccaUUeRl.s:504    .text.HAL_GetHalVersion:00000000 $t
     /tmp/ccaUUeRl.s:510    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
     /tmp/ccaUUeRl.s:524    .text.HAL_GetHalVersion:00000004 $d
     /tmp/ccaUUeRl.s:529    .text.HAL_GetREVID:00000000 $t
     /tmp/ccaUUeRl.s:535    .text.HAL_GetREVID:00000000 HAL_GetREVID
     /tmp/ccaUUeRl.s:552    .text.HAL_GetREVID:00000008 $d
     /tmp/ccaUUeRl.s:557    .text.HAL_GetDEVID:00000000 $t
     /tmp/ccaUUeRl.s:563    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
     /tmp/ccaUUeRl.s:580    .text.HAL_GetDEVID:0000000c $d
     /tmp/ccaUUeRl.s:585    .text.HAL_GetUIDw0:00000000 $t
     /tmp/ccaUUeRl.s:591    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
     /tmp/ccaUUeRl.s:606    .text.HAL_GetUIDw0:00000008 $d
     /tmp/ccaUUeRl.s:611    .text.HAL_GetUIDw1:00000000 $t
     /tmp/ccaUUeRl.s:617    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
     /tmp/ccaUUeRl.s:632    .text.HAL_GetUIDw1:00000008 $d
     /tmp/ccaUUeRl.s:637    .text.HAL_GetUIDw2:00000000 $t
     /tmp/ccaUUeRl.s:643    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
     /tmp/ccaUUeRl.s:658    .text.HAL_GetUIDw2:00000008 $d
ARM GAS  /tmp/ccaUUeRl.s 			page 27


     /tmp/ccaUUeRl.s:663    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $t
     /tmp/ccaUUeRl.s:669    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccaUUeRl.s:686    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000c $d
     /tmp/ccaUUeRl.s:691    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $t
     /tmp/ccaUUeRl.s:697    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccaUUeRl.s:714    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000c $d
     /tmp/ccaUUeRl.s:719    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
     /tmp/ccaUUeRl.s:725    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccaUUeRl.s:742    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
     /tmp/ccaUUeRl.s:747    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
     /tmp/ccaUUeRl.s:753    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccaUUeRl.s:770    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
     /tmp/ccaUUeRl.s:775    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
     /tmp/ccaUUeRl.s:781    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccaUUeRl.s:798    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
     /tmp/ccaUUeRl.s:803    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
     /tmp/ccaUUeRl.s:809    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccaUUeRl.s:826    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
     /tmp/ccaUUeRl.s:838    .data.uwTickPrio:00000000 $d
     /tmp/ccaUUeRl.s:845    .bss.uwTick:00000000 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
