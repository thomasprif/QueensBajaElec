ARM GAS  /tmp/cctKCrNJ.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32f1xx_it.c"
  18              		.section	.text.SDTimer_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	SDTimer_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	SDTimer_Handler:
  26              	.LFB65:
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f1xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f1xx_it.c ****   *
  16:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f1xx_it.c ****   */
  18:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f1xx_it.c **** 
  20:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f1xx_it.c **** #include "main.h"
  22:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f1xx_it.c **** 
  27:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f1xx_it.c **** 
  30:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f1xx_it.c **** 
  32:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/cctKCrNJ.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f1xx_it.c **** 
  35:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f1xx_it.c **** 
  37:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f1xx_it.c **** 
  40:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f1xx_it.c **** 
  42:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f1xx_it.c **** 
  45:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f1xx_it.c **** 
  47:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f1xx_it.c **** 
  50:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f1xx_it.c **** 
  52:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f1xx_it.c **** volatile uint8_t FatFsCnt = 0;
  55:Core/Src/stm32f1xx_it.c **** volatile uint8_t Timer1, Timer2;
  56:Core/Src/stm32f1xx_it.c **** 
  57:Core/Src/stm32f1xx_it.c **** void SDTimer_Handler(void)
  58:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 58 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  59:Core/Src/stm32f1xx_it.c ****   if(Timer1 > 0)
  32              		.loc 1 59 3 view .LVU1
  33              		.loc 1 59 13 is_stmt 0 view .LVU2
  34 0000 084B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36              		.loc 1 59 5 view .LVU3
  37 0004 23B1     		cbz	r3, .L2
  60:Core/Src/stm32f1xx_it.c ****     Timer1--;
  38              		.loc 1 60 5 is_stmt 1 view .LVU4
  39              		.loc 1 60 11 is_stmt 0 view .LVU5
  40 0006 074A     		ldr	r2, .L4
  41 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  42 000a 013B     		subs	r3, r3, #1
  43 000c DBB2     		uxtb	r3, r3
  44 000e 1370     		strb	r3, [r2]
  45              	.L2:
  61:Core/Src/stm32f1xx_it.c **** 
  62:Core/Src/stm32f1xx_it.c ****   if(Timer2 > 0)
  46              		.loc 1 62 3 is_stmt 1 view .LVU6
  47              		.loc 1 62 13 is_stmt 0 view .LVU7
  48 0010 054B     		ldr	r3, .L4+4
  49 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50              		.loc 1 62 5 view .LVU8
  51 0014 23B1     		cbz	r3, .L1
  63:Core/Src/stm32f1xx_it.c ****     Timer2--;
  52              		.loc 1 63 5 is_stmt 1 view .LVU9
ARM GAS  /tmp/cctKCrNJ.s 			page 3


  53              		.loc 1 63 11 is_stmt 0 view .LVU10
  54 0016 044A     		ldr	r2, .L4+4
  55 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  56 001a 013B     		subs	r3, r3, #1
  57 001c DBB2     		uxtb	r3, r3
  58 001e 1370     		strb	r3, [r2]
  59              	.L1:
  64:Core/Src/stm32f1xx_it.c **** }
  60              		.loc 1 64 1 view .LVU11
  61 0020 7047     		bx	lr
  62              	.L5:
  63 0022 00BF     		.align	2
  64              	.L4:
  65 0024 00000000 		.word	Timer1
  66 0028 00000000 		.word	Timer2
  67              		.cfi_endproc
  68              	.LFE65:
  70              		.section	.text.NMI_Handler,"ax",%progbits
  71              		.align	1
  72              		.global	NMI_Handler
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	NMI_Handler:
  78              	.LFB66:
  65:Core/Src/stm32f1xx_it.c **** 
  66:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  67:Core/Src/stm32f1xx_it.c **** 
  68:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  69:Core/Src/stm32f1xx_it.c **** extern CAN_HandleTypeDef hcan;
  70:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  71:Core/Src/stm32f1xx_it.c **** 
  72:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  73:Core/Src/stm32f1xx_it.c **** 
  74:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  75:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  76:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  77:Core/Src/stm32f1xx_it.c **** /**
  78:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  79:Core/Src/stm32f1xx_it.c ****   */
  80:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  81:Core/Src/stm32f1xx_it.c **** {
  79              		.loc 1 81 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ Volatile: function does not return.
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.L7:
  82:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  83:Core/Src/stm32f1xx_it.c **** 
  84:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  85:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  86:Core/Src/stm32f1xx_it.c ****    while (1)
  86              		.loc 1 86 4 view .LVU13
  87:Core/Src/stm32f1xx_it.c ****   {
  88:Core/Src/stm32f1xx_it.c ****   }
ARM GAS  /tmp/cctKCrNJ.s 			page 4


  87              		.loc 1 88 3 view .LVU14
  86:Core/Src/stm32f1xx_it.c ****   {
  88              		.loc 1 86 10 view .LVU15
  89 0000 FEE7     		b	.L7
  90              		.cfi_endproc
  91              	.LFE66:
  93              		.section	.text.HardFault_Handler,"ax",%progbits
  94              		.align	1
  95              		.global	HardFault_Handler
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	HardFault_Handler:
 101              	.LFB67:
  89:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  90:Core/Src/stm32f1xx_it.c **** }
  91:Core/Src/stm32f1xx_it.c **** 
  92:Core/Src/stm32f1xx_it.c **** /**
  93:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  94:Core/Src/stm32f1xx_it.c ****   */
  95:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  96:Core/Src/stm32f1xx_it.c **** {
 102              		.loc 1 96 1 view -0
 103              		.cfi_startproc
 104              		@ Volatile: function does not return.
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.L9:
  97:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  98:Core/Src/stm32f1xx_it.c **** 
  99:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 100:Core/Src/stm32f1xx_it.c ****   while (1)
 109              		.loc 1 100 3 view .LVU17
 101:Core/Src/stm32f1xx_it.c ****   {
 102:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 103:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 104:Core/Src/stm32f1xx_it.c ****   }
 110              		.loc 1 104 3 view .LVU18
 100:Core/Src/stm32f1xx_it.c ****   {
 111              		.loc 1 100 9 view .LVU19
 112 0000 FEE7     		b	.L9
 113              		.cfi_endproc
 114              	.LFE67:
 116              		.section	.text.MemManage_Handler,"ax",%progbits
 117              		.align	1
 118              		.global	MemManage_Handler
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 123              	MemManage_Handler:
 124              	.LFB68:
 105:Core/Src/stm32f1xx_it.c **** }
 106:Core/Src/stm32f1xx_it.c **** 
 107:Core/Src/stm32f1xx_it.c **** /**
 108:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 109:Core/Src/stm32f1xx_it.c ****   */
ARM GAS  /tmp/cctKCrNJ.s 			page 5


 110:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 111:Core/Src/stm32f1xx_it.c **** {
 125              		.loc 1 111 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L11:
 112:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f1xx_it.c **** 
 114:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 115:Core/Src/stm32f1xx_it.c ****   while (1)
 132              		.loc 1 115 3 view .LVU21
 116:Core/Src/stm32f1xx_it.c ****   {
 117:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 118:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 119:Core/Src/stm32f1xx_it.c ****   }
 133              		.loc 1 119 3 view .LVU22
 115:Core/Src/stm32f1xx_it.c ****   {
 134              		.loc 1 115 9 view .LVU23
 135 0000 FEE7     		b	.L11
 136              		.cfi_endproc
 137              	.LFE68:
 139              		.section	.text.BusFault_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	BusFault_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	BusFault_Handler:
 147              	.LFB69:
 120:Core/Src/stm32f1xx_it.c **** }
 121:Core/Src/stm32f1xx_it.c **** 
 122:Core/Src/stm32f1xx_it.c **** /**
 123:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 124:Core/Src/stm32f1xx_it.c ****   */
 125:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 126:Core/Src/stm32f1xx_it.c **** {
 148              		.loc 1 126 1 view -0
 149              		.cfi_startproc
 150              		@ Volatile: function does not return.
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154              	.L13:
 127:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 128:Core/Src/stm32f1xx_it.c **** 
 129:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 130:Core/Src/stm32f1xx_it.c ****   while (1)
 155              		.loc 1 130 3 view .LVU25
 131:Core/Src/stm32f1xx_it.c ****   {
 132:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 133:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 134:Core/Src/stm32f1xx_it.c ****   }
 156              		.loc 1 134 3 view .LVU26
 130:Core/Src/stm32f1xx_it.c ****   {
ARM GAS  /tmp/cctKCrNJ.s 			page 6


 157              		.loc 1 130 9 view .LVU27
 158 0000 FEE7     		b	.L13
 159              		.cfi_endproc
 160              	.LFE69:
 162              		.section	.text.UsageFault_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	UsageFault_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	UsageFault_Handler:
 170              	.LFB70:
 135:Core/Src/stm32f1xx_it.c **** }
 136:Core/Src/stm32f1xx_it.c **** 
 137:Core/Src/stm32f1xx_it.c **** /**
 138:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 139:Core/Src/stm32f1xx_it.c ****   */
 140:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 141:Core/Src/stm32f1xx_it.c **** {
 171              		.loc 1 141 1 view -0
 172              		.cfi_startproc
 173              		@ Volatile: function does not return.
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177              	.L15:
 142:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 143:Core/Src/stm32f1xx_it.c **** 
 144:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 145:Core/Src/stm32f1xx_it.c ****   while (1)
 178              		.loc 1 145 3 view .LVU29
 146:Core/Src/stm32f1xx_it.c ****   {
 147:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 148:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 149:Core/Src/stm32f1xx_it.c ****   }
 179              		.loc 1 149 3 view .LVU30
 145:Core/Src/stm32f1xx_it.c ****   {
 180              		.loc 1 145 9 view .LVU31
 181 0000 FEE7     		b	.L15
 182              		.cfi_endproc
 183              	.LFE70:
 185              		.section	.text.SVC_Handler,"ax",%progbits
 186              		.align	1
 187              		.global	SVC_Handler
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	SVC_Handler:
 193              	.LFB71:
 150:Core/Src/stm32f1xx_it.c **** }
 151:Core/Src/stm32f1xx_it.c **** 
 152:Core/Src/stm32f1xx_it.c **** /**
 153:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 154:Core/Src/stm32f1xx_it.c ****   */
 155:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 156:Core/Src/stm32f1xx_it.c **** {
 194              		.loc 1 156 1 view -0
ARM GAS  /tmp/cctKCrNJ.s 			page 7


 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 157:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 158:Core/Src/stm32f1xx_it.c **** 
 159:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 160:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 161:Core/Src/stm32f1xx_it.c **** 
 162:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 163:Core/Src/stm32f1xx_it.c **** }
 199              		.loc 1 163 1 view .LVU33
 200 0000 7047     		bx	lr
 201              		.cfi_endproc
 202              	.LFE71:
 204              		.section	.text.DebugMon_Handler,"ax",%progbits
 205              		.align	1
 206              		.global	DebugMon_Handler
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	DebugMon_Handler:
 212              	.LFB72:
 164:Core/Src/stm32f1xx_it.c **** 
 165:Core/Src/stm32f1xx_it.c **** /**
 166:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 167:Core/Src/stm32f1xx_it.c ****   */
 168:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 169:Core/Src/stm32f1xx_it.c **** {
 213              		.loc 1 169 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 170:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 171:Core/Src/stm32f1xx_it.c **** 
 172:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 173:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 174:Core/Src/stm32f1xx_it.c **** 
 175:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 176:Core/Src/stm32f1xx_it.c **** }
 218              		.loc 1 176 1 view .LVU35
 219 0000 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE72:
 223              		.section	.text.PendSV_Handler,"ax",%progbits
 224              		.align	1
 225              		.global	PendSV_Handler
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 230              	PendSV_Handler:
 231              	.LFB73:
 177:Core/Src/stm32f1xx_it.c **** 
 178:Core/Src/stm32f1xx_it.c **** /**
 179:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 180:Core/Src/stm32f1xx_it.c ****   */
ARM GAS  /tmp/cctKCrNJ.s 			page 8


 181:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 182:Core/Src/stm32f1xx_it.c **** {
 232              		.loc 1 182 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 183:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 184:Core/Src/stm32f1xx_it.c **** 
 185:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 186:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 187:Core/Src/stm32f1xx_it.c **** 
 188:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 189:Core/Src/stm32f1xx_it.c **** }
 237              		.loc 1 189 1 view .LVU37
 238 0000 7047     		bx	lr
 239              		.cfi_endproc
 240              	.LFE73:
 242              		.section	.text.SysTick_Handler,"ax",%progbits
 243              		.align	1
 244              		.global	SysTick_Handler
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 249              	SysTick_Handler:
 250              	.LFB74:
 190:Core/Src/stm32f1xx_it.c **** 
 191:Core/Src/stm32f1xx_it.c **** /**
 192:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 193:Core/Src/stm32f1xx_it.c ****   */
 194:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 195:Core/Src/stm32f1xx_it.c **** {
 251              		.loc 1 195 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 08B5     		push	{r3, lr}
 256              	.LCFI0:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
 196:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 197:Core/Src/stm32f1xx_it.c ****   FatFsCnt++;
 260              		.loc 1 197 3 view .LVU39
 261              		.loc 1 197 11 is_stmt 0 view .LVU40
 262 0002 084A     		ldr	r2, .L23
 263 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 264 0006 0133     		adds	r3, r3, #1
 265 0008 DBB2     		uxtb	r3, r3
 266 000a 1370     		strb	r3, [r2]
 198:Core/Src/stm32f1xx_it.c **** 	  if(FatFsCnt >= 10)
 267              		.loc 1 198 4 is_stmt 1 view .LVU41
 268              		.loc 1 198 16 is_stmt 0 view .LVU42
 269 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 270              		.loc 1 198 6 view .LVU43
 271 000e 092B     		cmp	r3, #9
 272 0010 02D8     		bhi	.L22
ARM GAS  /tmp/cctKCrNJ.s 			page 9


 273              	.L20:
 199:Core/Src/stm32f1xx_it.c **** 	  {
 200:Core/Src/stm32f1xx_it.c **** 	    FatFsCnt = 0;
 201:Core/Src/stm32f1xx_it.c **** 	    SDTimer_Handler();
 202:Core/Src/stm32f1xx_it.c **** 	  }
 203:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 204:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 274              		.loc 1 204 3 is_stmt 1 view .LVU44
 275 0012 FFF7FEFF 		bl	HAL_IncTick
 276              	.LVL0:
 205:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 206:Core/Src/stm32f1xx_it.c **** 
 207:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 208:Core/Src/stm32f1xx_it.c **** }
 277              		.loc 1 208 1 is_stmt 0 view .LVU45
 278 0016 08BD     		pop	{r3, pc}
 279              	.L22:
 200:Core/Src/stm32f1xx_it.c **** 	    SDTimer_Handler();
 280              		.loc 1 200 6 is_stmt 1 view .LVU46
 200:Core/Src/stm32f1xx_it.c **** 	    SDTimer_Handler();
 281              		.loc 1 200 15 is_stmt 0 view .LVU47
 282 0018 1346     		mov	r3, r2
 283 001a 0022     		movs	r2, #0
 284 001c 1A70     		strb	r2, [r3]
 201:Core/Src/stm32f1xx_it.c **** 	  }
 285              		.loc 1 201 6 is_stmt 1 view .LVU48
 286 001e FFF7FEFF 		bl	SDTimer_Handler
 287              	.LVL1:
 288 0022 F6E7     		b	.L20
 289              	.L24:
 290              		.align	2
 291              	.L23:
 292 0024 00000000 		.word	FatFsCnt
 293              		.cfi_endproc
 294              	.LFE74:
 296              		.section	.text.USB_LP_CAN1_RX0_IRQHandler,"ax",%progbits
 297              		.align	1
 298              		.global	USB_LP_CAN1_RX0_IRQHandler
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 303              	USB_LP_CAN1_RX0_IRQHandler:
 304              	.LFB75:
 209:Core/Src/stm32f1xx_it.c **** 
 210:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 211:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 212:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 213:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 214:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 215:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 216:Core/Src/stm32f1xx_it.c **** 
 217:Core/Src/stm32f1xx_it.c **** /**
 218:Core/Src/stm32f1xx_it.c ****   * @brief This function handles USB low priority or CAN RX0 interrupts.
 219:Core/Src/stm32f1xx_it.c ****   */
 220:Core/Src/stm32f1xx_it.c **** void USB_LP_CAN1_RX0_IRQHandler(void)
 221:Core/Src/stm32f1xx_it.c **** {
 305              		.loc 1 221 1 view -0
ARM GAS  /tmp/cctKCrNJ.s 			page 10


 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309 0000 08B5     		push	{r3, lr}
 310              	.LCFI1:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 3, -8
 313              		.cfi_offset 14, -4
 222:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */
 223:Core/Src/stm32f1xx_it.c **** 
 224:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
 225:Core/Src/stm32f1xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 314              		.loc 1 225 3 view .LVU50
 315 0002 0248     		ldr	r0, .L27
 316 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 317              	.LVL2:
 226:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 1 */
 227:Core/Src/stm32f1xx_it.c **** 
 228:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 1 */
 229:Core/Src/stm32f1xx_it.c **** }
 318              		.loc 1 229 1 is_stmt 0 view .LVU51
 319 0008 08BD     		pop	{r3, pc}
 320              	.L28:
 321 000a 00BF     		.align	2
 322              	.L27:
 323 000c 00000000 		.word	hcan
 324              		.cfi_endproc
 325              	.LFE75:
 327              		.global	Timer2
 328              		.section	.bss.Timer2,"aw",%nobits
 331              	Timer2:
 332 0000 00       		.space	1
 333              		.global	Timer1
 334              		.section	.bss.Timer1,"aw",%nobits
 337              	Timer1:
 338 0000 00       		.space	1
 339              		.global	FatFsCnt
 340              		.section	.bss.FatFsCnt,"aw",%nobits
 343              	FatFsCnt:
 344 0000 00       		.space	1
 345              		.text
 346              	.Letext0:
 347              		.file 2 "/opt/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 348              		.file 3 "/opt/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 349              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 350              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 351              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 352              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cctKCrNJ.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
     /tmp/cctKCrNJ.s:19     .text.SDTimer_Handler:00000000 $t
     /tmp/cctKCrNJ.s:25     .text.SDTimer_Handler:00000000 SDTimer_Handler
     /tmp/cctKCrNJ.s:65     .text.SDTimer_Handler:00000024 $d
     /tmp/cctKCrNJ.s:337    .bss.Timer1:00000000 Timer1
     /tmp/cctKCrNJ.s:331    .bss.Timer2:00000000 Timer2
     /tmp/cctKCrNJ.s:71     .text.NMI_Handler:00000000 $t
     /tmp/cctKCrNJ.s:77     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/cctKCrNJ.s:94     .text.HardFault_Handler:00000000 $t
     /tmp/cctKCrNJ.s:100    .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/cctKCrNJ.s:117    .text.MemManage_Handler:00000000 $t
     /tmp/cctKCrNJ.s:123    .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/cctKCrNJ.s:140    .text.BusFault_Handler:00000000 $t
     /tmp/cctKCrNJ.s:146    .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/cctKCrNJ.s:163    .text.UsageFault_Handler:00000000 $t
     /tmp/cctKCrNJ.s:169    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/cctKCrNJ.s:186    .text.SVC_Handler:00000000 $t
     /tmp/cctKCrNJ.s:192    .text.SVC_Handler:00000000 SVC_Handler
     /tmp/cctKCrNJ.s:205    .text.DebugMon_Handler:00000000 $t
     /tmp/cctKCrNJ.s:211    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/cctKCrNJ.s:224    .text.PendSV_Handler:00000000 $t
     /tmp/cctKCrNJ.s:230    .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/cctKCrNJ.s:243    .text.SysTick_Handler:00000000 $t
     /tmp/cctKCrNJ.s:249    .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/cctKCrNJ.s:292    .text.SysTick_Handler:00000024 $d
     /tmp/cctKCrNJ.s:343    .bss.FatFsCnt:00000000 FatFsCnt
     /tmp/cctKCrNJ.s:297    .text.USB_LP_CAN1_RX0_IRQHandler:00000000 $t
     /tmp/cctKCrNJ.s:303    .text.USB_LP_CAN1_RX0_IRQHandler:00000000 USB_LP_CAN1_RX0_IRQHandler
     /tmp/cctKCrNJ.s:323    .text.USB_LP_CAN1_RX0_IRQHandler:0000000c $d
     /tmp/cctKCrNJ.s:332    .bss.Timer2:00000000 $d
     /tmp/cctKCrNJ.s:338    .bss.Timer1:00000000 $d
     /tmp/cctKCrNJ.s:344    .bss.FatFsCnt:00000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_CAN_IRQHandler
hcan
